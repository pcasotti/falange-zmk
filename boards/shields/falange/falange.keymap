#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define SYM 1
#define NAV 2
#define NUM 3
#define ACC 4
#define GAME0 5
#define GAME1 6

#define BR_SQT GRAVE
#define BR_SEMI SLASH
#define BR_LBKT RBKT
#define BR_LBRC RBRC
#define BR_RBKT BSLH
#define BR_RBRC PIPE
#define BR_SLASH INT1
#define BR_TILDE SQT
#define BR_CARET LS(BR_TILDE)
#define BR_BSLH NUBS
#define BR_QMARK LS(BR_SLASH)
#define BR_PIPE LS(BR_BSLH)
#define BR_CCED SEMI
#define BR_ACUT LBKT
#define BR_GRAVE LS(BR_ACUT)

/ {
    macros {
        ZMK_MACRO(aac, bindings = <&kp BR_ACUT &kp A>;)
        ZMK_MACRO(oac, bindings = <&kp BR_ACUT &kp O>;)
        ZMK_MACRO(eac, bindings = <&kp BR_ACUT &kp E>;)
        ZMK_MACRO(uac, bindings = <&kp BR_ACUT &kp U>;)
        ZMK_MACRO(iac, bindings = <&kp BR_ACUT &kp I>;)

        ZMK_MACRO(atd, bindings = <&kp BR_TILDE &kp A>;)
        ZMK_MACRO(otd, bindings = <&kp BR_TILDE &kp O>;)
        ZMK_MACRO(etd, bindings = <&kp BR_TILDE &kp E>;)
        ZMK_MACRO(utd, bindings = <&kp BR_TILDE &kp U>;)
        ZMK_MACRO(itd, bindings = <&kp BR_TILDE &kp I>;)

        ZMK_MACRO(agr, bindings = <&kp BR_GRAVE &kp A>;)
        ZMK_MACRO(ogr, bindings = <&kp BR_GRAVE &kp O>;)
        ZMK_MACRO(egr, bindings = <&kp BR_GRAVE &kp E>;)
        ZMK_MACRO(ugr, bindings = <&kp BR_GRAVE &kp U>;)
        ZMK_MACRO(igr, bindings = <&kp BR_GRAVE &kp I>;)
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <SYM NAV>;
            then-layer = <NUM>;
        };
    };

    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&tog GAME0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "BASE";
            bindings = <
    &kp BR_SQT &kp COMMA &kp DOT  &kp P     &kp Y                         &kp F     &kp G     &kp C     &kp R     &kp L
    &kp A     &kp O     &kp E     &kp U     &kp I                         &kp D     &kp H     &kp T     &kp N     &kp S
    &kp BR_SEMI &kp Q   &kp J     &kp K     &kp X                         &kp B     &kp M     &kp W     &kp V     &kp Z
                                            &kp LSHFT &mo NAV   &mo SYM   &kp SPACE
            >;
        };

        sym_layer {
            display-name = "SYM";
            bindings = <
    &kp AT    &kp BR_LBKT &kp BR_LBRC &kp LPAR &kp DLLR                   &kp LT    &kp RPAR  &kp BR_RBRC &kp BR_RBKT &kp GT
    &kp ESC   &kp STAR  &kp MINUS &kp EQUAL &kp PLUS                      &kp AMPS  &kp RGUI  &kp LALT  &kp RCTRL &kp RSHFT
    &kp BR_PIPE &kp HASH &kp UNDER &kp EXCL &kp PRCNT                     &kp BR_BSLH &kp BR_SLASH &kp BR_TILDE &kp BR_QMARK &kp BR_CARET
                                            &mo ACC   &trans    &trans    &trans
            >;
        };

        nav_layer {
            display-name = "NAV";
            bindings = <
    &kp C_BRI_DN &kp C_BRI_UP &kp TAB &kp C_VOL_DN &kp C_VOL_UP           &trans    &trans    &kp UP    &kp RET   &kp DEL
    &kp LSHFT &kp LCTRL &kp LALT  &kp LGUI  &kp C_MUTE                    &trans    &kp LEFT  &kp DOWN  &kp RIGHT &kp BSPC
    &trans    &trans    &trans    &trans    &trans                        &td0      &trans    &trans    &trans    &trans
                                            &tog GAME0 &trans   &trans    &trans
            >;
        };

        num_layer {
            display-name = "NUM";
            bindings = <
    &kp N1    &kp N2    &kp N3    &kp N4    &kp N5                        &kp N6    &kp N7    &kp N8    &kp N9    &kp N0
    &kp LSHFT &kp LCTRL &kp LALT  &kp LGUI  &kp F11                       &kp F12   &kp RGUI  &kp LALT  &kp RCTRL &kp RSHFT
    &kp F1    &kp F2    &kp F3    &kp F4    &kp F5                        &kp F6    &kp F7    &kp F8    &kp F9    &kp F10
                                            &trans    &mo NUM   &mo NUM   &trans
            >;
        };

        acc_layer {
            display-name = "ACC";
            bindings = <
    &aac      &oac      &eac      &uac      &iac                          &trans    &trans    &kp BR_CCED &trans  &trans
    &atd      &otd      &etd      &utd      &itd                          &ext_power EP_TOG &trans &trans &trans  &trans
    &agr      &ogr      &egr      &ugr      &igr                          &bt BT_CLR_ALL &trans &trans  &trans    &trans
                                            &trans    &trans    &trans    &trans
            >;
        };

        game0_layer {
            display-name = "GAME";
            bindings = <
    &kp TAB   &kp Q     &kp W     &kp E     &kp R                         &none     &none     &none     &none     &none
    &kp LSHFT &kp A     &kp S     &kp D     &kp F                         &none     &none     &none     &none     &none
    &kp LCTRL &kp X     &kp C     &kp V     &kp G                         &none     &none     &none     &none     &none
                                            &kp SPACE &mo GAME1 &none     &none
            >;
        };

        game1_layer {
            display-name = "GAME";
            bindings = <
    &kp N5    &kp N4    &trans    &kp N1    &kp N2                        &trans    &trans    &kp UP    &trans    &trans
    &kp ESC   &trans    &trans    &trans    &kp N3                        &trans    &kp LEFT  &kp DOWN  &kp RIGHT &trans
    &kp BR_SQT &kp M    &kp T     &kp P     &trans                        &trans    &trans    &trans    &trans    &trans
                                            &tog GAME0 &trans   &trans    &trans
            >;
        };
    };
};
